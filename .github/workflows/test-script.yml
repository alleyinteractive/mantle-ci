on:
  push:
    branches:
      - develop
  pull_request:

name: Test Script

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        install-core-tests: ["true", "false"]
        sqlite: ["true", "false"]
        wordpress: ["latest", "trunk", "6.0"]
        object: ["true", "memcached", "redis"]
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: "root"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    name: "Test Script ${{ matrix.wordpress }} - Core Suites: ${{ matrix.install-core-tests }} - SQLite: ${{ matrix.sqlite }}"
    env:
      WP_CORE_DIR: '/tmp/wordpress'
      WP_VERSION: ${{ matrix.wordpress }}
      INSTALL_WP_TEST_DEBUG: 1
      WP_INSTALL_CORE_TEST_SUITE: ${{ matrix.install-core-tests }}
      WP_USE_SQLITE: ${{ matrix.sqlite }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Run install-wp-tests.sh and check installation"
        shell: bash
        run: |
          # install-wp-tests.sh <db-name> <db-user> <db-pass> <db-host> <wp-version> <skip-database-creation> <install-vip-mu-plugins> <install-object-cache>
          bash install-wp-tests.sh wordpress_unit_tests root root localhost "$WP_VERSION" false true ${{ matrix.object }}
          bash bin/test-script.sh

  check:
    if: always()
    needs: test
    runs-on: ubuntu-latest
    name: "Check if all the tests passed"
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
